# Generated by Django 4.1.7 on 2023-03-18 06:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('slug', models.SlugField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('position_column', models.PositiveSmallIntegerField()),
                ('position_order', models.PositiveSmallIntegerField()),
                ('users_can_post', models.BooleanField(default=True)),
                ('users_can_comment', models.BooleanField(default=True)),
                ('max_comment', models.PositiveSmallIntegerField(default=250)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['position_column', 'position_order'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.CharField(max_length=10000)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_removed', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='forum.comment')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('order', models.PositiveSmallIntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.category')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=30)),
                ('text', models.CharField(max_length=10000)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('modified_at', models.DateTimeField(default=None, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_best', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.category')),
                ('tag', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='forum.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TopicLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topiclikes', to='forum.topic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topiclikes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentlikes', to='forum.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentlikes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='forum.topic'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='topiclike',
            index=models.Index(fields=['topic'], name='forum_topic_topic_i_6be3ce_idx'),
        ),
        migrations.AddIndex(
            model_name='topiclike',
            index=models.Index(fields=['user'], name='forum_topic_user_id_aafa76_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='topiclike',
            unique_together={('user', 'topic')},
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['category'], name='forum_topic_categor_e92d61_idx'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['category', 'tag', 'user'], name='forum_topic_categor_1a9ccf_idx'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['-created_at'], name='forum_topic_created_60d8a9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='commentlike',
            unique_together={('user', 'comment')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created_at'], name='forum_comme_created_7f9d8d_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['topic'], name='forum_comme_topic_i_48ba22_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user'], name='forum_comme_user_id_f28cc6_idx'),
        ),
    ]
